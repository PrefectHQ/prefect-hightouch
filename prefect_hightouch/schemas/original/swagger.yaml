components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    CronSchedule:
      additionalProperties: true
      properties:
        expression:
          type: string
      required:
      - expression
      type: object
    DBTSchedule:
      additionalProperties: true
      properties:
        account:
          properties:
            id:
              type: string
          required:
          - id
          type: object
        dbtCredentialId:
          type: string
        job:
          properties:
            id:
              type: string
          required:
          - id
          type: object
      required:
      - dbtCredentialId
      - account
      - job
      type: object
    Destination:
      additionalProperties: true
      description: 'The service receiving your data (e.g. Salesforce, Hubspot, Customer.io,
        or a

        SFTP server)'
      properties:
        configuration:
          additionalProperties: {}
          description: 'The destination''s configuration. This specifies general metadata
            about destination, like hostname and username.

            Hightouch will be using this configuration to connect to destination.


            The schema depends on the destination.


            Consumers should NOT make assumptions on the contents of the

            configuration. It may change as Hightouch updates its internal code.'
          properties: {}
          type: object
        createdAt:
          description: The timestamp when the destination was created
          format: date-time
          type: string
        id:
          description: The destination's id
          type: string
        name:
          description: The destination's name
          type: string
        slug:
          description: The destination's slug
          type: string
        syncs:
          description: A list of syncs that sync to this destination.
          items:
            type: string
          type: array
        type:
          description: The destination's type (e.g. salesforce or hubspot).
          type: string
        updatedAt:
          description: The timestamp when the destination was last updated
          format: date-time
          type: string
        workspaceId:
          description: The id of the workspace that the destination belongs to
          type: string
      required:
      - id
      - name
      - slug
      - workspaceId
      - createdAt
      - updatedAt
      - type
      - configuration
      - syncs
      type: object
    Interval:
      additionalProperties: true
      properties:
        quantity:
          format: double
          type: number
        unit:
          $ref: '#/components/schemas/IntervalUnit'
      required:
      - unit
      - quantity
      type: object
    IntervalSchedule:
      additionalProperties: true
      properties:
        interval:
          $ref: '#/components/schemas/Interval'
      required:
      - interval
      type: object
    IntervalUnit:
      enum:
      - minute
      - hour
      - day
      - week
      type: string
    Model:
      additionalProperties: true
      description: 'The SQL query that pulls data from your source to send to your
        destination.

        We send your SQL query directly to your source so any SQL that is valid for
        your source (including functions) is valid in Hightouch.'
      properties:
        createdAt:
          description: The timestamp when model was created
          format: date-time
          type: string
        custom:
          description: Custom query for sources that doesn't support sql. For example,
            Airtable.
          properties:
            query: {}
          required:
          - query
          type: object
        dbt:
          description: Query that is based on a dbt model
          properties:
            compiledSql:
              description: Compiled SQL in the dbt model
              type: string
            database:
              description: Name of the database containing the generated table
              type: string
            dbtUniqueId:
              description: Unique ID of the model assigned by dbt (usually some combination
                of the schema and table name)
              type: string
            modelId:
              description: Model id that refer to a dbt model
              type: string
            name:
              description: Name of the table generated by the dbt model
              type: string
            rawSql:
              description: Raw SQL in the dbt model
              type: string
            schema:
              description: Name of the schema containing the generated table
              type: string
          required:
          - dbtUniqueId
          - compiledSql
          - rawSql
          - database
          - schema
          - name
          - modelId
          type: object
        id:
          description: The id of the model
          type: string
        isSchema:
          description: 'If is_schema is true, the model is just used to build other
            models.

            Either as part of visual querying, or as the root of a visual query.'
          type: boolean
        name:
          description: The name of the model
          type: string
        primaryKey:
          description: The primary key will be null if the query doesn't get directly
            synced (e.g. a relationship table for visual querying)
          type: string
        queryType:
          description: 'The type of the query. Available options: custom, raw_sql,
            tabel, dbt and visual.'
          type: string
        raw:
          description: Standard raw SQL query
          properties:
            sql:
              type: string
          required:
          - sql
          type: object
        slug:
          description: The slug of the model
          type: string
        sourceId:
          description: The id of the source that model is connected to
          type: string
        syncs:
          description: The list of id of syncs that uses this model
          items:
            type: string
          type: array
        table:
          description: Table-based query that fetches on a table instead of SQL
          properties:
            name:
              type: string
          required:
          - name
          type: object
        tags:
          additionalProperties:
            type: string
          description: The tags of the model
          properties: {}
          type: object
        updatedAt:
          description: The timestamp when model was lastly updated
          format: date-time
          type: string
        visual:
          description: Visual query, used by audience
          properties:
            filter: {}
            parentId:
              description: Parent id of the schema that visual query is based on
              type: string
            primaryLabel:
              type: string
            secondaryLabel:
              type: string
          required:
          - secondaryLabel
          - primaryLabel
          - filter
          - parentId
          type: object
        workspaceId:
          description: The id of the workspace where the model belongs to
          type: string
      required:
      - id
      - name
      - slug
      - workspaceId
      - primaryKey
      - createdAt
      - updatedAt
      - sourceId
      - queryType
      - tags
      - isSchema
      - syncs
      type: object
    Record_Day.boolean-or-undefined_:
      description: Construct a type with a set of properties K of type T
      properties:
        friday:
          type: boolean
        monday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        thursday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    Source:
      additionalProperties: true
      description: 'The database or warehouse where your data is stored. The starting
        point for

        a Hightouch data pipeline.'
      properties:
        configuration:
          additionalProperties: {}
          description: 'The source''s configuration. This specifies general metadata
            about sources, like connection details

            Hightouch will use this configuration to connect to underlying source.


            The schema depends on the destination.


            Consumers should NOT make assumptions on the contents of the

            configuration. It may change as Hightouch updates its internal code.'
          properties: {}
          type: object
        createdAt:
          description: The timestamp when the source was created
          format: date-time
          type: string
        id:
          description: The source's id
          type: string
        name:
          description: The source's name
          type: string
        slug:
          description: The source's slug
          type: string
        type:
          description: The source's type (e.g. snowflake or postgres).
          type: string
        updatedAt:
          description: The timestamp when the source was last updated
          format: date-time
          type: string
        workspaceId:
          description: The id of the workspace that the source belongs to
          type: string
      required:
      - id
      - name
      - slug
      - workspaceId
      - createdAt
      - updatedAt
      - configuration
      - type
      type: object
    Sync:
      additionalProperties: true
      description: 'Syncs define how data from models are mapped to destinations.
        Each time a

        sync runs, Hightouch calculates the rows that have changed since the last

        run, and syncs them to Sync''s destination.'
      properties:
        configuration:
          additionalProperties: {}
          description: 'The sync''s configuration. This specifies how data is mapped,
            among other

            configuration.


            The schema depends on the destination.


            Consumers should NOT make assumptions on the contents of the

            configuration. It may change as Hightouch updates its internal code.'
          properties: {}
          type: object
        createdAt:
          description: The timestamp when the sync was created
          format: date-time
          type: string
        destinationId:
          description: The id of the Destination that sync is connected to
          type: string
        disabled:
          description: Whether the sync has been disabled by the user.
          type: boolean
        id:
          description: The sync's id
          type: string
        lastRunAt:
          description: The timestamp of the last sync run
          format: date-time
          type: string
        modelId:
          description: The id of the Model that sync is connected to
          type: string
        primaryKey:
          description: The primary key that sync uses to identify data from source
          type: string
        referencedColumns:
          description: The reference column that sync depends on to sync data from
            source
          items:
            type: string
          type: array
        schedule:
          description: 'The scheduling configuration. It can be triggerd based on
            several ways:


            Interval: the sync will be trigged based on certain interval(minutes/hours/days/weeks)


            Cron: the sync will be trigged based on cron expression https://en.wikipedia.org/wiki/Cron.


            Visual: the sync will be trigged based a visual cron configuration on
            UI


            DBT-cloud: the sync will be trigged based on a dbt cloud job'
          properties:
            schedule:
              anyOf:
              - $ref: '#/components/schemas/IntervalSchedule'
              - $ref: '#/components/schemas/CronSchedule'
              - $ref: '#/components/schemas/VisualCronSchedule'
              - $ref: '#/components/schemas/DBTSchedule'
            type:
              type: string
          required:
          - schedule
          - type
          type: object
        slug:
          description: The sync's slug
          type: string
        status:
          $ref: '#/components/schemas/SyncStatus'
          description: The overall status of the sync
        updatedAt:
          description: The timestamp when the sync was last updated
          format: date-time
          type: string
        workspaceId:
          description: The id of the workspace that the sync belongs to
          type: string
      required:
      - id
      - slug
      - workspaceId
      - createdAt
      - updatedAt
      - destinationId
      - modelId
      - configuration
      - schedule
      - status
      - disabled
      - lastRunAt
      - referencedColumns
      - primaryKey
      type: object
    SyncRun:
      additionalProperties: true
      properties:
        completionRatio:
          description: The completion ratio of sync run, showing the progress of a
            sync run
          format: double
          type: number
        createdAt:
          description: 'The timestamp when sync run was created. In most cases this
            will be

            equivalent to `startedAt`, but it may be earlier if the sync was triggered

            while a run was already in progress, and the new run didn''t start for

            a while.'
          format: date-time
          type: string
        error:
          description: Error message if the sync run didn't finish successfully
          type: string
        failedRows:
          description: 'The number of rows that we attempted to sync, but were rejected
            by the

            destination.


            This does not include rows that weren''t attempted due to the sync being

            cancelled.'
          properties:
            addedCount:
              description: The number of failed adds.
              format: double
              type: number
            changedCount:
              description: The number of failed changes.
              format: double
              type: number
            removedCount:
              description: The number of failed removes.
              format: double
              type: number
          required:
          - removedCount
          - changedCount
          - addedCount
          type: object
        finishedAt:
          description: The timestamp when the sync run finished
          format: date-time
          type: string
        id:
          description: The sync run's id
          type: string
        plannedRows:
          description: 'The number of planned rows that this sync run was supposed
            to execute.


            Note that the counts for `successfulRows` and `failedRows` may not add
            up

            to `plannedRows` if the sync was cancelled.'
          properties:
            addedCount:
              description: The number of added rows.
              format: double
              type: number
            changedCount:
              description: The number of changed rows.
              format: double
              type: number
            removedCount:
              description: The number of removed rows.
              format: double
              type: number
          required:
          - removedCount
          - changedCount
          - addedCount
          type: object
        querySize:
          description: The number of rows in the query.
          format: double
          type: number
        startedAt:
          description: The timestamp when the sync run started
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/SyncRunStatus'
          description: The status of sync run
        successfulRows:
          description: The number of rows that were successfully processed by the
            destination.
          properties:
            addedCount:
              description: The number of successful adds.
              format: double
              type: number
            changedCount:
              description: The number of successful changes.
              format: double
              type: number
            removedCount:
              description: The number of successful removes.
              format: double
              type: number
          required:
          - removedCount
          - changedCount
          - addedCount
          type: object
      required:
      - id
      - createdAt
      - startedAt
      - finishedAt
      - querySize
      - status
      - completionRatio
      - plannedRows
      - successfulRows
      - failedRows
      type: object
    SyncRunStatus:
      description: The status of sync runs
      enum:
      - cancelled
      - failed
      - queued
      - success
      - warning
      - querying
      - processing
      - reporting
      - interrupted
      type: string
    SyncStatus:
      enum:
      - disabled
      - pending
      - cancelled
      - failed
      - queued
      - success
      - warning
      - querying
      - processing
      - reporting
      - interrupted
      type: string
    TriggerRunCustomInput:
      description: The input of a trigger action to run syncs based on sync ID, slug
        or other filters
      properties:
        fullResync:
          default: 'false'
          description: 'Whether to resync all the rows in the query (i.e. ignoring
            previously

            synced rows).'
          type: boolean
        syncId:
          description: Trigger run based on sync id
          type: string
        syncSlug:
          description: Trigger run based on sync slug
          type: string
      type: object
    TriggerRunInput:
      description: The input of a trigger action to run syncs
      properties:
        fullResync:
          default: 'false'
          description: 'Whether to resync all the rows in the query (i.e. ignoring
            previously

            synced rows).'
          type: boolean
      type: object
    TriggerRunOutput:
      additionalProperties: true
      description: The output of a trigger action to run syncs
      properties:
        id:
          description: 'The id of the triggered sync run. This can be passed to `/sync/runs`
            to

            get the run''s status.'
          type: string
      required:
      - id
      type: object
    ValidateErrorJSON:
      additionalProperties: true
      properties:
        details:
          additionalProperties: {}
          properties: {}
          type: object
        message:
          enum:
          - Validation failed
          nullable: false
          type: string
      required:
      - message
      - details
      type: object
    VisualCronSchedule:
      additionalProperties: true
      properties:
        expressions:
          items:
            properties:
              days:
                $ref: '#/components/schemas/Record_Day.boolean-or-undefined_'
              time:
                type: string
            required:
            - days
            - time
            type: object
          type: array
      required:
      - expressions
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: Bearer
      scheme: bearer
      type: http
info:
  contact:
    email: hello@hightouch.com
    name: Hightouch
    url: https://hightouch.com
  description: Hightouch Public Rest API to access syncs, models, sources and destinations
  license:
    name: MIT
  title: Hightouch API
  version: 1.0.0
openapi: 3.0.0
paths:
  /destinations:
    get:
      description: List the destinations in the user's workspace
      operationId: ListDestination
      parameters:
      - description: Filter based on the destination's name
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Filter based on destination's slug
        in: query
        name: slug
        required: false
        schema:
          type: string
      - description: Limit the number of returned destinations
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      - description: Order the returned destinations
        in: query
        name: orderBy
        required: false
        schema:
          default: id
          enum:
          - id
          - name
          - slug
          - createdAt
          - updatedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - configuration:
                        hostname: foo
                        region: bar
                      createdAt: '2022-02-16T21:37:58.510Z'
                      id: '1'
                      name: testdestination1
                      slug: testdestination1
                      syncs:
                      - '1'
                      - '2'
                      type: salesforce
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
                    - configuration:
                        hostname: foo
                        region: bar
                      createdAt: '2022-02-16T21:37:58.510Z'
                      id: '2'
                      name: testdestination2
                      slug: testdestination2
                      syncs:
                      - '1'
                      - '2'
                      type: hubspot
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Destination'
                    type: array
                required:
                - data
                type: object
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: List Destinations
  /destinations/{destinationId}:
    get:
      description: Retrieve a destination based on its Hightouch ID
      operationId: GetDestination
      parameters:
      - description: The destination's ID
        in: path
        name: destinationId
        required: true
        schema:
          format: double
          type: number
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    configuration:
                      hostname: foo
                      region: bar
                    createdAt: '2022-02-16T21:37:58.510Z'
                    id: '1'
                    name: testdestination
                    slug: testdestination
                    syncs:
                    - '1'
                    - '2'
                    type: salesforce
                    updatedAt: '2022-02-16T21:37:58.510Z'
                    workspaceId: '1'
              schema:
                $ref: '#/components/schemas/Destination'
          description: Ok
        '401':
          description: Unauthorized
        '404':
          description: Not found
      security:
      - bearerAuth: []
      summary: Get Destination
  /models:
    get:
      description: List all the models in the current workspace
      operationId: ListModel
      parameters:
      - description: filter based on name
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: filter based on slug
        in: query
        name: slug
        required: false
        schema:
          type: string
      - description: limit the number of object it returns. Default is 100.
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      - description: specify the order
        in: query
        name: orderBy
        required: false
        schema:
          default: id
          enum:
          - id
          - name
          - slug
          - createdAt
          - updatedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - createdAt: '2022-02-16T21:37:58.510Z'
                      id: '1'
                      isSchema: false
                      name: testModel
                      primaryKey: id
                      queryType: raw_sql
                      raw:
                        sql: select * from users
                      slug: testModel
                      sourceId: '1'
                      syncs:
                      - '1'
                      - '2'
                      tags:
                        foo: bar
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
                    - createdAt: '2022-02-16T21:37:58.510Z'
                      id: '2'
                      isSchema: false
                      name: testModel2
                      primaryKey: id
                      queryType: raw_sql
                      raw:
                        sql: select * from accounts
                      slug: testModel2
                      sourceId: '1'
                      syncs:
                      - '1'
                      - '2'
                      tags:
                        foo: baz
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Model'
                    type: array
                required:
                - data
                type: object
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: List Models
  /models/{modelId}:
    get:
      description: Retrieve models from model ID
      operationId: GetModel
      parameters:
      - description: The id of the model
        in: path
        name: modelId
        required: true
        schema:
          format: double
          type: number
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    createdAt: '2022-02-16T21:37:58.510Z'
                    id: '1'
                    isSchema: false
                    name: testModel
                    primaryKey: id
                    queryType: raw_sql
                    raw:
                      sql: select * from users
                    slug: testModel
                    sourceId: '1'
                    syncs:
                    - '1'
                    - '2'
                    tags:
                      foo: bar
                    updatedAt: '2022-02-16T21:37:58.510Z'
                    workspaceId: '1'
              schema:
                $ref: '#/components/schemas/Model'
          description: Ok
        '401':
          description: Unauthorized
        '404':
          description: Not found
      security:
      - bearerAuth: []
      summary: Get Model
  /sources:
    get:
      description: List all the sources in the current workspace
      operationId: ListSource
      parameters:
      - description: filter based on name
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: filter based on slug
        in: query
        name: slug
        required: false
        schema:
          type: string
      - description: limit the number of object it returns
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      - description: specify the order
        in: query
        name: orderBy
        required: false
        schema:
          default: id
          enum:
          - id
          - name
          - slug
          - createdAt
          - updatedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - configuration:
                        hostname: foo
                        region: bar
                      createdAt: '2022-02-16T21:37:58.510Z'
                      id: '1'
                      name: testSource1
                      slug: testSource1
                      type: snowflake
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
                    - configuration:
                        hostname: foo
                        region: bar
                      createdAt: '2022-02-16T21:37:58.510Z'
                      id: '2'
                      name: testSource2
                      slug: testSource2
                      type: googlesheet
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Source'
                    type: array
                required:
                - data
                type: object
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - bearerAuth: []
      summary: List Sources
  /sources/{sourceId}:
    get:
      description: Retrieve source from source ID
      operationId: GetSource
      parameters:
      - description: The id of the source
        in: path
        name: sourceId
        required: true
        schema:
          format: double
          type: number
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    configuration:
                      hostname: foo
                      region: bar
                    createdAt: '2022-02-16T21:37:58.510Z'
                    id: '1'
                    name: testSource
                    slug: testSource
                    type: snowflake
                    updatedAt: '2022-02-16T21:37:58.510Z'
                    workspaceId: '1'
              schema:
                $ref: '#/components/schemas/Source'
          description: Ok
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: Get Source
  /syncs:
    get:
      description: List all the syncs in the current workspace
      operationId: ListSync
      parameters:
      - description: filter based on slug
        in: query
        name: slug
        required: false
        schema:
          type: string
      - description: filter based on modelId
        in: query
        name: modelId
        required: false
        schema:
          format: double
          type: number
      - description: select syncs that were run after given time
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
      - description: select syncs that were run before given time
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
      - description: limit the number of object it returns. Default is 100.
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      - description: specify the order
        in: query
        name: orderBy
        required: false
        schema:
          default: id
          enum:
          - id
          - name
          - slug
          - createdAt
          - updatedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - configuration:
                        associationMappings: []
                        externalIdMapping:
                          from: test_id
                          to: firstname
                          type: standard
                        mappings:
                        - from: email
                          to: email
                          type: standard
                        - from: phone
                          to: phone
                          type: standard
                        mode: upsert
                        object: contacts
                        objectId: 0-1
                      createdAt: '2022-02-16T21:37:58.510Z'
                      destinationId: '1'
                      disabled: false
                      id: '1'
                      lastRunAt: '2022-02-16T21:37:58.510Z'
                      modelId: '1'
                      primaryKey: id
                      referencedColumns:
                      - email
                      - name
                      schedule:
                        schedule:
                          interval:
                            quantity: 1
                            unit: day
                        type: interval
                      slug: testsync
                      status: success
                      updatedAt: '2022-02-16T21:37:58.510Z'
                      workspaceId: '1'
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/Sync'
                    type: array
                required:
                - data
                type: object
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: List Syncs
  /syncs/trigger:
    post:
      description: 'Trigger a new run globally based on sync id or sync slug


        If a run is already in progress, this queues a sync run that will get

        executed immediately after the current run completes.'
      operationId: TriggerRunCustom
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunCustomInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/TriggerRunOutput'
                - $ref: '#/components/schemas/ValidateErrorJSON'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: Trigger Sync From ID or Slug
  /syncs/{syncId}:
    get:
      description: Retrieve sync from sync ID
      operationId: GetSync
      parameters:
      - description: The id of the sync
        in: path
        name: syncId
        required: true
        schema:
          format: double
          type: number
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    configuration:
                      associationMappings: []
                      externalIdMapping:
                        from: test_id
                        to: firstname
                        type: standard
                      mappings:
                      - from: email
                        to: email
                        type: standard
                      - from: phone
                        to: phone
                        type: standard
                      mode: upsert
                      object: contacts
                      objectId: 0-1
                    createdAt: '2022-02-16T21:37:58.510Z'
                    destinationId: '1'
                    disabled: false
                    id: '1'
                    lastRunAt: '2022-02-16T21:37:58.510Z'
                    modelId: '1'
                    primaryKey: id
                    referencedColumns:
                    - email
                    - name
                    schedule:
                      schedule:
                        interval:
                          quantity: 1
                          unit: day
                      type: interval
                    slug: testsync
                    status: success
                    updatedAt: '2022-02-16T21:37:58.510Z'
                    workspaceId: '1'
              schema:
                $ref: '#/components/schemas/Sync'
          description: Ok
        '401':
          description: Unauthorized
        '404':
          description: Not found
      security:
      - bearerAuth: []
      summary: Get Sync
  /syncs/{syncId}/runs:
    get:
      description: List all sync runs under a sync
      operationId: ListSyncRuns
      parameters:
      - in: path
        name: syncId
        required: true
        schema:
          format: double
          type: number
      - description: query for specific run id
        in: query
        name: runId
        required: false
        schema:
          format: double
          type: number
      - description: limit the number of object it returns. Default is 5.
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      - description: setting offset from result(for pagination)
        in: query
        name: offset
        required: false
        schema:
          format: double
          type: number
      - description: select sync runs that are started after given timestamp
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
      - description: select sync runs that are started before certain timestamp
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
      - description: select sync runs that are started within last given minutes
        in: query
        name: within
        required: false
        schema:
          format: double
          type: number
      - description: specify the order
        in: query
        name: orderBy
        required: false
        schema:
          default: id
          enum:
          - id
          - createdAt
          - startedAt
          - finishedAt
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                    - completionRatio: 0.54
                      createdAt: '2022-02-08T16:11:04.712Z'
                      error: null
                      failedRows:
                        addedCount: 0
                        changedCount: 0
                        removedCount: 0
                      finishedAt: '2022-02-08T16:11:11.698Z'
                      id: '42'
                      plannedRows:
                        addedCount: 773
                        changedCount: 0
                        removedCount: 0
                      querySize: 773
                      startedAt: '2022-02-08T16:11:04.712Z'
                      status: success
                      successfulRows:
                        addedCount: 773
                        changedCount: 0
                        removedCount: 0
                    - completionRatio: 0.54
                      createdAt: '2022-02-08T17:44:05.198Z'
                      error: null
                      failedRows:
                        addedCount: 0
                        changedCount: 0
                        removedCount: 0
                      finishedAt: '2022-02-08T17:44:25.366Z'
                      id: '43'
                      plannedRows:
                        addedCount: 0
                        changedCount: 765
                        removedCount: 0
                      querySize: 773
                      startedAt: '2022-02-08T16:11:04.712Z'
                      status: success
                      successfulRows:
                        addedCount: 0
                        changedCount: 765
                        removedCount: 0
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/SyncRun'
                    type: array
                required:
                - data
                type: object
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: List Sync Runs
  /syncs/{syncId}/trigger:
    post:
      description: 'Trigger a new run for the given sync.


        If a run is already in progress, this queues a sync run that will get

        executed immediately after the current run completes.'
      operationId: TriggerRun
      parameters:
      - description: The id of the sync to trigger a run
        in: path
        name: syncId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunInput'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerRunOutput'
          description: Ok
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateErrorJSON'
          description: Validation Failed
      security:
      - bearerAuth: []
      summary: Trigger Sync
servers:
- url: https://api.hightouch.com/api/v1
